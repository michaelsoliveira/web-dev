services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: ./docker/${ENVIRONMENT}/app/Dockerfile
  #     args:
  #       VERSION: ${IO_VERSION}
  #   environment:
  #     DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${PGPORT}/${IO_PROJECT}_${IO_APP}?schema=public
  #     ENVIRONMENT: ${ENVIRONMENT}
  #     STAGE: ${IO_STAGE}
  #     POSTGRES_DB: ${DB_NAME}
  #     BASE_URL: ${BASE_URL}
  #   restart: unless-stopped
  #   extends:
  #     file: ./docker/app.yml
  #     service: ${ENVIRONMENT}
  #   networks:
  #     - stack
  #   ports:
  #     - "${PORT}:3333"
  #   links:
  #     - postgres
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   healthcheck:
  #     test: curl --fail -s ${BASE_URL}/status || exit 1
  #     interval: 20s
  #     timeout: 10s
  #     start_period: 10s
  #     retries: 5
  #   volumes:
  #     - /src
    # deploy:
    #   replicas: 6
    #   update_config:
    #     parallelism: 2
    #     delay: 10s
    #     order: start-first
    #   restart_policy:
    #     condition: on-failure
    #     max_attempts: 3
    #     delay: 10s
    #   resources:
    #     limits:
    #       cpus: "0.50"
    #       memory: 512M

  postgres:
    image: postgis/postgis
    environment:
      PGUSER: ${POSTGRES_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${PGPORT}
    restart: unless-stopped
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - data_pgdir:/var/lib/postgresql/data
      - ./docker/entrypoint:/docker-entrypoint-initdb.d
    networks:
      - stack
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:7
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_ROOT_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - data_pgadmin:/var/lib/pgadmin
    networks:
      - stack
    profiles:
      - development
      - alpha
      - beta
 
networks:
  stack:
    external: true
    name: meta-network

volumes:
  data_pgdir:
    name: data_pgdir
    external: true

  data_pgadmin:
    name: data_pgadmin
    external: true